name: Deploy Preview (PR)

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: read
  deployments: write
  pages: write
  id-token: write

jobs:
  preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    outputs:
      slug: ${{ steps.slug.outputs.slug }}
      preview_url: ${{ steps.prepare.outputs.preview_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Compute preview slug
        id: slug
        run: |
          set -euo pipefail
          branch="${{ github.event.pull_request.head.ref }}"
          slug=$(echo "$branch" | tr '[:upper:]' '[:lower:]' | sed 's#[^a-z0-9-]#-#g' | sed 's/-\+/-/g' | sed 's/^-//' | sed 's/-$//')
          if [ -z "$slug" ]; then
            slug="pr-${{ github.event.pull_request.number }}"
          fi
          echo "slug=$slug" >> "$GITHUB_OUTPUT"

      - name: Build WASM via Docker
        run: make wasm-docker

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: web/package.json

      - name: Install deps
        working-directory: web
        run: npm ci

      - name: Build site
        working-directory: web
        env:
          VITE_BASE: /${{ github.event.repository.name }}/${{ steps.slug.outputs.slug }}/
        run: npm run build

      - name: Prepare Pages snapshot with preview
        id: prepare
        env:
          SLUG: ${{ steps.slug.outputs.slug }}
        run: |
          set -euo pipefail
          repo_url="${GITHUB_SERVER_URL:-https://github.com}/${GITHUB_REPOSITORY}.git"
          token='${{ github.token }}'
          auth_url="${repo_url/https:\/\//https://x-access-token:${token}@}"
          if ! git ls-remote --exit-code "$auth_url" gh-pages >/dev/null 2>&1; then
            echo '⚠️  Branch gh-pages não encontrada. Rode o deploy da main (workflow "Build and Deploy") ao menos uma vez antes de gerar prévias.' >&2
            exit 1
          fi
          git clone --depth 1 --branch gh-pages "$auth_url" pages-root
          rm -rf "pages-root/$SLUG"
          mkdir -p "pages-root/$SLUG"
          rsync -a --delete web/dist/ "pages-root/$SLUG/"
          if [ -d pages-root/.git ]; then
            rm -rf pages-root/.git
          fi
          if [ -f pages-root/CNAME ]; then
            base="https://$(head -n1 pages-root/CNAME | tr -d '\r\n')"
          else
            base="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          fi
          base="${base%/}"
          echo "preview_url=$base/$SLUG" >> "$GITHUB_OUTPUT"

      - name: Publish preview link
        run: |
          echo "Preview disponível em [${{ steps.prepare.outputs.preview_url }}](${{ steps.prepare.outputs.preview_url }})" >> "$GITHUB_STEP_SUMMARY"

      - name: Update gh-pages branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLUG: ${{ steps.slug.outputs.slug }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          set -euo pipefail
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          repo_url="https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          cd pages-root
          git init
          git checkout -b gh-pages
          git add .
          commit_msg="Preview ${SLUG} (#${PR_NUMBER})"
          git commit -m "$commit_msg"
          git push --force "$repo_url" gh-pages
          rm -rf .git

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages-root

  deploy:
    if: github.event.action != 'closed'
    needs: preview
    runs-on: ubuntu-latest
    environment:
      name: pr-${{ github.event.pull_request.number }}
      url: ${{ needs.preview.outputs.preview_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          branch: gh-pages

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Compute preview slug
        id: slug
        run: |
          set -euo pipefail
          branch="${{ github.event.pull_request.head.ref }}"
          slug=$(echo "$branch" | tr '[:upper:]' '[:lower:]' | sed 's#[^a-z0-9-]#-#g' | sed 's/-\+/-/g' | sed 's/^-//' | sed 's/-$//')
          if [ -z "$slug" ]; then
            slug="pr-${{ github.event.pull_request.number }}"
          fi
          echo "slug=$slug" >> "$GITHUB_OUTPUT"

      - name: Prepare Pages snapshot without preview
        id: prepare
        env:
          SLUG: ${{ steps.slug.outputs.slug }}
        run: |
          set -euo pipefail
          repo_url="${GITHUB_SERVER_URL:-https://github.com}/${GITHUB_REPOSITORY}.git"
          token='${{ github.token }}'
          auth_url="${repo_url/https:\/\//https://x-access-token:${token}@}"
          if ! git ls-remote --exit-code "$auth_url" gh-pages >/dev/null 2>&1; then
            echo '⚠️  Branch gh-pages não encontrada. Nada para limpar.' >&2
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          git clone --depth 1 --branch gh-pages "$auth_url" pages-root
          if [ -d pages-root/.git ]; then
            rm -rf pages-root/.git
          fi
          if [ -d "pages-root/$SLUG" ]; then
            rm -rf "pages-root/$SLUG"
            echo "changed=true" >> "$GITHUB_OUTPUT"
            if [ -f pages-root/CNAME ]; then
              base="https://$(head -n1 pages-root/CNAME | tr -d '\r\n')"
            else
              base="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
            fi
            base="${base%/}"
            echo "preview_url=$base/$SLUG" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Update gh-pages branch
        if: steps.prepare.outputs.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLUG: ${{ steps.slug.outputs.slug }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          set -euo pipefail
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          repo_url="https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          cd pages-root
          git init
          git checkout -b gh-pages
          git add .
          commit_msg="Cleanup preview ${SLUG} (#${PR_NUMBER})"
          git commit -m "$commit_msg"
          git push --force "$repo_url" gh-pages
          rm -rf .git

      - name: Upload artifact
        if: steps.prepare.outputs.changed == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages-root

      - name: Deploy updated Pages snapshot
        if: steps.prepare.outputs.changed == 'true'
        uses: actions/deploy-pages@v4
        with:
          branch: gh-pages

      - name: Mark deployment inactive
        if: steps.prepare.outputs.changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const envName = `pr-${context.payload.pull_request.number}`;
            const deployments = await github.paginate(github.rest.repos.listDeployments, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              environment: envName,
            });
            for (const deployment of deployments) {
              await github.rest.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id,
                state: 'inactive',
                log_url: `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`,
                description: 'Preview removido após merge/close.',
              });
            }

      - name: Report removal
        if: steps.prepare.outputs.changed == 'true'
        run: |
          echo "Preview removido: ${{ steps.prepare.outputs.preview_url }}" >> "$GITHUB_STEP_SUMMARY"
