name: Build and Deploy (GitHub Pages)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build WASM via Docker
        run: make wasm-docker

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: web/package.json

      - name: Install deps
        working-directory: web
        run: npm ci

      - name: Build site
        working-directory: web
        env:
          VITE_BASE: /${{ github.event.repository.name }}/
        run: npm run build

      - name: Restore preview directories
        env:
          PAGES_REPO: ${{ github.repository }}
        run: |
          if git ls-remote --exit-code --heads origin gh-pages >/dev/null 2>&1; then
            pages_dir="$(mktemp -d)"
            token='${{ github.token }}'
            repo_url="${GITHUB_SERVER_URL:-https://github.com}/$PAGES_REPO.git"
            auth_url="${repo_url/https:\/\//https://x-access-token:${token}@}"
            git clone --depth 1 --branch gh-pages "$auth_url" "$pages_dir"
            if [ -f "$pages_dir"/CNAME ] && [ ! -f web/dist/CNAME ]; then
              cp "$pages_dir"/CNAME web/dist/CNAME
            fi
            if [ -f "$pages_dir"/.nojekyll ] && [ ! -f web/dist/.nojekyll ]; then
              cp "$pages_dir"/.nojekyll web/dist/.nojekyll
            fi
            # Preserve previews stored under previews/<slug>
            if [ -d "$pages_dir"/previews ]; then
              mkdir -p web/dist/previews
              rsync -a "$pages_dir"/previews/ web/dist/previews/
            fi
            # Preserve previews stored at repo root (legacy layout)
            find "$pages_dir" -mindepth 1 -maxdepth 1 -type d \( ! -name '.git' ! -name 'previews' \) | while read -r dir; do
              name="$(basename "$dir")"
              case "$name" in
                assets|css|img|js|media|static|fonts)
                  continue
                  ;;
                *)
                  if [ ! -e "web/dist/$name" ]; then
                    cp -R "$dir" "web/dist/$name"
                  fi
                  ;;
              esac
            done
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: web/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
